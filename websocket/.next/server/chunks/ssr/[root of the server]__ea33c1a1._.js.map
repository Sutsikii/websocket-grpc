{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/roboto_mono_f008899b.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"roboto_mono_f008899b-module__rs8Aoq__className\",\n  \"variable\": \"roboto_mono_f008899b-module__rs8Aoq__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/roboto_mono_f008899b.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Roboto_Mono%22,%22arguments%22:[{%22variable%22:%22--font-roboto-mono%22,%22subsets%22:[%22latin%22],%22display%22:%22swap%22}],%22variableName%22:%22robotoMono%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Roboto Mono', 'Roboto Mono Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,2JAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,2JAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,2JAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/mecha/workflow/websocket-grpc/components/theme/theme-mode-toggle.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ModeToggle = registerClientReference(\n    function() { throw new Error(\"Attempted to call ModeToggle() from the server but ModeToggle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/theme/theme-mode-toggle.tsx <module evaluation>\",\n    \"ModeToggle\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,aAAa,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,wEACA","debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/mecha/workflow/websocket-grpc/components/theme/theme-mode-toggle.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ModeToggle = registerClientReference(\n    function() { throw new Error(\"Attempted to call ModeToggle() from the server but ModeToggle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/theme/theme-mode-toggle.tsx\",\n    \"ModeToggle\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,aAAa,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,oDACA","debugId":null}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/mecha/workflow/websocket-grpc/components/layout/header.tsx"],"sourcesContent":["import { ModeToggle } from \"../theme/theme-mode-toggle\";\r\n\r\nexport function Header() {\r\n    return (\r\n        <header className=\"flex items-center justify-between px-4 py-2 border-b border-accent\">\r\n            <p className=\"font-extrabold text-xl\">NextJS template</p>\r\n            <div className=\"flex-1\"></div>\r\n            <ModeToggle />\r\n        </header>\r\n    )\r\n}"],"names":[],"mappings":";;;;AAAA;;;AAEO,SAAS;IACZ,qBACI,8OAAC;QAAO,WAAU;;0BACd,8OAAC;gBAAE,WAAU;0BAAyB;;;;;;0BACtC,8OAAC;gBAAI,WAAU;;;;;;0BACf,8OAAC,+IAAA,CAAA,aAAU;;;;;;;;;;;AAGvB","debugId":null}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/mecha/workflow/websocket-grpc/components/theme/theme-provider.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ThemeProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call ThemeProvider() from the server but ThemeProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/theme/theme-provider.tsx <module evaluation>\",\n    \"ThemeProvider\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,qEACA","debugId":null}},
    {"offset": {"line": 134, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/mecha/workflow/websocket-grpc/components/theme/theme-provider.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const ThemeProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call ThemeProvider() from the server but ThemeProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/theme/theme-provider.tsx\",\n    \"ThemeProvider\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,iDACA","debugId":null}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/mecha/workflow/websocket-grpc/app/layout.tsx"],"sourcesContent":["import type { Metadata } from \"next\";\r\nimport { Roboto_Mono } from \"next/font/google\";\r\nimport \"./globals.css\";\r\nimport { Header } from \"@/components/layout/header\";\r\nimport { ThemeProvider } from \"@/components/theme/theme-provider\";\r\n\r\nconst robotoMono = Roboto_Mono({ \r\n  variable: \"--font-roboto-mono\",\r\n  subsets: [\"latin\"],\r\n  display: \"swap\",\r\n});\r\n\r\nexport const metadata: Metadata = {\r\n  title: \"Nextjs Starter\",\r\n  description: \"A starter kit to develop faster with nextjs\",\r\n};\r\n\r\nexport default function RootLayout({\r\n  children,\r\n}: Readonly<{\r\n  children: React.ReactNode;\r\n}>) {\r\n  return (\r\n    <html lang=\"fr\" className={`${robotoMono.className} antialiased`} suppressHydrationWarning>\r\n      <body>\r\n        <ThemeProvider\r\n          attribute=\"class\"\r\n          defaultTheme=\"system\"\r\n          enableSystem\r\n          disableTransitionOnChange\r\n        >\r\n          <Header />\r\n          {children}\r\n        </ThemeProvider>\r\n      </body>\r\n    </html>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;;AAGA;AACA;;;;;;AAQO,MAAM,WAAqB;IAChC,OAAO;IACP,aAAa;AACf;AAEe,SAAS,WAAW,EACjC,QAAQ,EAGR;IACA,qBACE,8OAAC;QAAK,MAAK;QAAK,WAAW,GAAG,+IAAA,CAAA,UAAU,CAAC,SAAS,CAAC,YAAY,CAAC;QAAE,wBAAwB;kBACxF,cAAA,8OAAC;sBACC,cAAA,8OAAC,yIAAA,CAAA,gBAAa;gBACZ,WAAU;gBACV,cAAa;gBACb,YAAY;gBACZ,yBAAyB;;kCAEzB,8OAAC,+HAAA,CAAA,SAAM;;;;;oBACN;;;;;;;;;;;;;;;;;AAKX","debugId":null}},
    {"offset": {"line": 215, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/mecha/workflow/websocket-grpc/node_modules/next/src/server/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-rsc'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0],"debugId":null}}]
}